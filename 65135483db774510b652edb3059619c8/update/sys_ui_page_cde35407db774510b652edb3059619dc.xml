<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script/>
        <description/>
        <direct>false</direct>
        <endpoint>x_snc_agile_manual.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
<div style="padding-left: 20px;">
<span style="visibility: hidden;">_CUT_HERE_</span>
	<g2:no_escape>$[
		var docapi = new x_snc_devtools.DocumentationAPI('x_snc_agile');
		docapi.RenderHeader();
	]</g2:no_escape>
	
	<p>Welcome to the Agile app - created and maintained by&#160;<a href="mailto:sascha.wildgrube@servicenow.com">Sascha Wildgrube</a>.</p>

	<h2>Overview</h2> 
	<g2:no_escape>$[
		docapi.RenderDescription();  
	]</g2:no_escape>	
	
	<h2>Features</h2>
	<ul>
		<li>Manage multiple backlogs with their backlog items.</li>
		<li>Put all backlog items into an order based on relative priority.</li>
		<li>Maintain dependencies between backlog items and visualize the dependency tree.</li>
		<li>Maintain the correct order of backlog items while considering their dependencies at all times.</li>
		<li>Manage the development and deployment process as described in the whitepaper&#160;<a href="https://www.wildgrube.com/download/A%20mature%20Development%20and%20Deployment%20Process.pdf" target="_blank">A mature Development and Deployment Process - How to sleep well when your 200 developers deploy apps every day</a>.</li>
		<li>Keep track on relevant components and personas for each backlog item.</li> 
		<li>List all "Top Level" backlog items - these are backlog items which are not required by any other backlog item. This list view is helpful to make real prioritization decisions.</li>
	</ul>

	<h2>Disclaimer</h2>
	<g2:no_escape>$[docapi.RenderDisclaimer()]</g2:no_escape>	
	
	<h2>System Requirements</h2>
	<ul>
		<g2:no_escape>$[
			docapi.RenderSystemRequirements(
				'Vancouver,Washington',
				true,
				AppGetDependencies());
		]</g2:no_escape>	
	</ul>
	
	<h2>Installation</h2>
	<ol>
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsImportFromSourceControl(
				'DevTools',
				'https://github.com/saschawildgrube/servicenow-devtools',
				true,
				'https://www.wildgrube.com/servicenow-devtools/');
		]</g2:no_escape>
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsImportFromSourceControl(
				'Agile',
				'https://github.com/saschawildgrube/servicenow-agile');
		]</g2:no_escape>		
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsAppInstall();
		]</g2:no_escape>		
	</ol>
	
	<h2>Configuration</h2>
	
	<ol>
		<li>Assign groups or users the x_snc_agile.agilist role.</li>
		<li>Create a backlog.</li>
		<li>Specify the definition of ready and the definition of done.</li>
		<li>If applicable, specify the lead developer and the lead tester.</li>
		<li>Define components and associate them to the backlog.</li>
	</ol>
	
	
	<h2>Backlog Item States</h2>

	<ol>
	<li><b>Draft / Need more info</b>: The requirement description is being worked on or more information is required to implement the backlog item.</li>
		<li><b>Ready</b>: The author of the item claims the item contains enough information to start development. A developer should be assigned to the backlog item.</li>
		<li><b>In Development</b>: Developers work on the implementation of the backlog item in the DEV environment.</li>
		<li><b>Done / Commited to repo</b>: Developers have completed their work and committed their changes to the source code repository - which makes the backlog item available to be part of one or more baselined application versions.</li>
		<li><b>Baselined</b>: The team has baselined all related applications that were affected by the changes made for this backlog item - which enables the backlog item to be part of a subsequent deployment to the TEST environment.</li>
		<li><b>In Test</b>: The changes related to the backlog item has been deployed to the TEST environemnt and a tester is asked to test the result.</li>
		<li><b>Test Failed / Showstopper / Back to development</b>: A backlog item has failed the test and must be considered as a showstopper - so the current version on the TEST environment MUST NOT be deplyoed to the PROD environment. The backlog item is sent back to a developer who is now asked to fix issues. It is important to distinguish this state from "In Development" because the current deployment on TEST should not be deployed to the PROD environment as long as there are showstoppers. If a test failed but the issues are not considered as showstoppers, the version can be deployed to PROD and the state should be set to "In Development" which indicates that they do not represent a reason to delay deployment to PROD but still need to be worked on.</li>
		<li><b>Baselined Showstopper</b>: A fix has been provided to resolve the showstopper. All relevant application versions have been baselined and are now ready for deployment to TEST.</li> 
		<li><b>Test Passed / Ready for PROD</b>: The test has been passed and the backlog item is ready for deployment on the PROD environment.</li>
		<li><b>Review on PROD</b>: Deployment to PROD environment has been completed. A final check should be done before the backlog item is marked as "Completed".</li>
		<li><b>Completed</b>: The backlog item is finally completed.</li>
		<li><b>Cancelled</b>: The backlog item will not be implemented or worked on any further.</li>
	</ol>
	
	
	<h2>Deployment Process</h2>
	
	<p>The following deployment process - no matter if performed manually or automated - should be applied to deploy applications (components).</p>
	<h3>Baseline an Application Version</h3>
	<ol>
		<li>Login to the DEV instance.</li>
		<li>Navigate to Studio.</li>
		<li>Switch to the application.</li>
		<li>Verify that the "dev" branch is active.</li>
		<li>Document all changes in the release notes section of the manual.</li>
		<li>Set verson in application settings.</li>
		<li>Run all ATF tests.</li>
		<li>Run (CodeSanity) Instance Scan checks.</li>
		<li>"Commit Changes" to the "dev" branch.</li>
		<li>Navigate to "Studio" / "File" / "Settings" and click on the button "Baseline Version".</li>
		<li>Login to the TEST instance.</li>
		<li>Navigate to Studio.</li>
		<li>Switch to the application.</li>
		<li>Select "Apply Remote Changes" (this is necessary to update the list of available tags).</li>
		<li>Select "Switch Branch" and select the corresponding version branch.</li>
		<li>Verify that the now current branch has changed to the just created branch.</li>
		<li>Navigate to "Studio" / "File" / "Settings" and execute the related link "Run Install Scripts".</li>
		<li>Mark backlog items associated to the application in "Done / Commited to repo" as "Baselined".</li>
	</ol>
	
	<h3>Deploy to TEST</h3>
	<ol>
		<li>Login to the TEST instance.</li>
		<li>Navigate to Studio.</li>
		<li>Switch to the application.</li>
		<li>Select "Apply Remote Changes" (this is necessary to update the list of available tags).</li>
		<li>Select "Switch Branch" and select the corresponding version branch.</li>
		<li>Verify that the now current branch has changed to the just created branch.</li>
		<li>Run (CodeSanity) Instance Scan checks.</li>
		<li>Navigate to "Studio" / "File" / "Settings" and execute the related link "Run Install Scripts".</li>
		<li>Run all ATF tests.</li>
		<li>Mark backlog items associated to the application in "Baselined" as "In Test".</li>
	</ol>

	<h3>Deploy to PROD</h3>
	<ol>
		<li>DO NOT PROCEED TO ROLL-FORWARD if there are backlog items "In Test" or in "Test Failed / Showstopper / Back to development" or "Baselined Showstopper"!</li>
		<li>Login to the PROD instance.</li>
		<li>Navigate to Studio.</li>
		<li>Switch to the application.</li>
		<li>Select "Apply Remote Changes" (this is necessary to update the list of available branches).</li>
		<li>Select "Switch Branch".</li>
		<li>Choose the branch name that represents the version that should be deployed.</li>
		<li>If in doubt, stash changes and reapply them afterwards. However it SHOULD NOT be necessary.</li>
		<li>Verify that the now current branch has changed to the just selected branch.</li>
		<li>Navigate to "Studio" / "File" / "Settings" and execute the related link "Run Install Scripts".</li>
		<li>Mark backlog items associated to the application in "Ready for PROD" as "Review in PROD".</li>
	</ol>

	
	<h2>Reference</h2>

	<h3>Configuration Options</h3>
	<g2:no_escape>$[docapi.RenderProperties()]</g2:no_escape>
	
	<h3>Roles</h3>
	<g2:no_escape>$[docapi.RenderRoles()]</g2:no_escape>		

	<h3>Tables</h3>
	<g2:no_escape>$[docapi.RenderTables()]</g2:no_escape>		

	<h3>UI Actions</h3>
	<g2:no_escape>$[docapi.RenderUIActions()]</g2:no_escape>		

<!--
	<h3>Script Includes</h3>
	<g2:no_escape>$[docapi.RenderScriptIncludes()]</g2:no_escape>
	
	<h3>UI Scripts</h3>
	<g2:no_escape>$[docapi.RenderUIScripts()]</g2:no_escape>	
	
	<h3>Test step configurations</h3>
	<g2:no_escape>$[docapi.RenderTestStepConfigurations()]</g2:no_escape>
	
	<h3>Extension Points</h3>
	<g2:no_escape>$[docapi.RenderExtensionPoints()]</g2:no_escape>		

	<h3>Business Rules</h3>
	<g2:no_escape>$[docapi.RenderBusinessRules()]</g2:no_escape>	
-->	

	<h3>Dependencies</h3>
	<g2:no_escape>$[docapi.RenderDependencies()]</g2:no_escape>	

	<h3>Technical Debts</h3>
	<g2:no_escape>$[docapi.RenderTechnicalDebts()]</g2:no_escape>			


	<h2>License</h2>
	<g2:no_escape>$[docapi.RenderCopyright(2022,'Sascha Wildgrube')]</g2:no_escape>
	<g2:no_escape>$[docapi.RenderLicense()]</g2:no_escape>
	
	<h2>Release Notes</h2>

	<h3>1.10.0 - TODO</h3>
	<ol>
		<li>Required backlog items of a backlog item are now sorted by order - in the form and on the "Dependency" view.</li>
		<li>The currently assigned user is now displayed in the "Work Plan" view.</li>
		<li>Improved display of required backlog items on the item form.</li>
		<li>Business rule "Backlog Item - Set downstream levels" produced debug output when changing a backlog item. This has been fixed.</li>
	</ol>


	<h3>1.9.0 - 2024-08-01</h3>
	<ol>
		<li>DevTools 1.97.0 is now required because of DocumentationAPI::RenderTables() and DocumentationAPI::RenderDependencies().</li>
		<li>Added menu module "All Active (Top Level)" to show all backlog items that no other item depends on. Added function GetBacklogItemDependencyLevel() and the business rules "Backlog Item - Set dependency level" and "Backlog Item - Set downstream levels".</li>
		<li>If no owner is specified, the user that opened the backlog item is set as the owner.</li>
		<li>The menu item "Baselining" now also shows items in state "Baselined Showstopper".</li>
		<li>AppInstall() now sets the default ordering on table "Backlog Items" to the field "Order".</li>
		<li>Updated the Backlog Item form layout for better overview. Hoping users will like it.</li>
	</ol>

	<h3>1.8.0 - 2024-03-31</h3>
	<ol>
		<li>DevTools 1.84.0 is now required.</li> 
		<li>Introduced the "Baselined" and "Baselined Showstopper" states.</li>
		<li>Added menu item "Baselining" to list all backlog items that are "Done", "Baselined" or "Baselined Showstopper".</li>
		<li>Added the "Continue Development" UI Action.</li>
		<li>Backlog items that are "hotfixed in PROD" are marked in blue.</li>
	</ol>
	
	<h3>1.7.0 - 2024-02-05</h3>
	<ol>
		<li>Utah is no longer actively supported.</li>
		<li>Agile has been fully tested with Washington.</li>
		<li>The backlog item dependency view "Work Plan" tab now hides already completed backlog items and does no longer show duplicates. This turns the view into a visualization of the remaining work to be done.</li>
		<li>If there is no developer, tester or owner assigned to a backlog item, the "Assigned To" field is cleared when entering the corresponding states.</li>
		<li>Fixed a defect in GetBacklogItemDependencies() which led to false-positive warnings on circular dependencies.</li>
		<li>Fixed a defect in BacklogItemManageOrder() which led incorrect ordering if multiple backlog items depend on the same backlog item which also has its own dependencies.</li>
	</ol>	
	
	<h3>1.6.0 - 2024-02-05</h3>
	<ol>
		<li>Added function BacklogItemManageOrder() to manage backlog item order recursively considering the required backlog items (and their dependencies likewise). It is now no longer possible to set the order of a backlog item below the order of a required backlog item. Circular dependencies are detected and ignored. Dependent backlog items are also considered - so the tree of dependencies is both walked up and down.</li>
		<li>Added feature descriptions to the manual.</li>
	</ol>	
	
	<h3>1.5.0 - 2024-01-29</h3>
	<ol>
		<li>DevTools 1.80.0 is now required because of RecordManageOrder() and HtmlRenderTree().</li>
		<li>Added new UI Action "New Required Backlog Item".</li>
		<li>Added new UI Action "Dependencies" to display the dependency tree of a backlog item.</li>
		<li>The definition of ready is now also displayed in the "Ready" state so that the description can be compared with the definition of ready.</li>
		<li>The backlog items that require the current backlog item are displayed on the backlog item form.</li>
		<li>Refactored AppInstall() to not use .update() directly.</li>
		<li>AppSetDefaults() now sets the logging verbosity to "info".</li>
		<li>Improved manual on process states.</li>
		<li>Consistent use of "showstopper" instead of "show stopper".</li>
	</ol>	
	
	<h3>1.4.0 - 2023-10-07</h3>
	<ol>
		<li>The Agile app has been fully tested with Vancouver.</li>
		<li>Tokyo is no longer actively supported.</li>
		<li>DevTools 1.71.0 is now required.</li>
		<li>Added the "Low Prio" UI action to send a backlog item to the end of the backlog.</li>
		<li>New backlog items ALWAYS start in state "Draft". When a new backlog item was created from the state specific list views (e.g. "In Test") the new item inherited the state from the list filter. This has been fixed.</li>
		<li>The fields "Hotfixed in PROD" and "Order" are now read-only once the backlog item is closed.</li>
	</ol>	
	
	<h3>1.3.0 - 2023-09-07</h3>
	<ol>
		<li>Backlog item number and state can no longer be edited in list views.</li>
		<li>Backlog items can now be marked as "Hotfixed in PROD" to indicate that a hotfix is already in place in production.</li>
		<li>In the backlog item list view, the referenced components are no longer cut off.</li>
		<li>The order can now be edited in the backlog item form.</li>
		<li>Added the "Prio 1" UI Action to set a backlog item to the top of the backlog.</li>
	</ol>	
	
	<h3>1.2.0 - 2023-06-08</h3>
	<ol>
		<li>Agile is now fully tested in Utah.</li>
		<li>DevTools 1.63.0 is now required.</li>
		<li>San Diego is no longer actively supported.</li>
		<li>Added the "Cancel" UI action to set the state of a backlog item to "cancelled".</li>
		<li>Initializing the backlog's default component on new backlog item now works properly.</li>
		<li>The backlog item's short description is now a mandatory field.</li>
		<li>Added the default DevOps user to the components list view.</li>
		<li>Added default component and owner to the backlog list view.</li>
		<li>Removed display value from the backlog item form view.</li>
		<li>Users with the x_snc_agile.agilist role were unable to add comments, edit the short description and description and assigned_to fields. This has been fixed.</li>
	</ol>	
	
	<h3>1.1.0 - 2023-03-06</h3>
	<ol>
		<li>Introduced Personas: Backlog items can now be associated with Personas.</li>
		<li>Backlog items can now turn into "Complete" state from "Done" - for tasks that do not require production deployment - such as documentation or exploration tasks.</li>
		<li>New backlog items are now added to the end (with the next highest order value) by default.</li>
		<li>Backlog items can now specify required other backlog items.</li>
		<li>Backlog item's display value now shows the number, the state and the short description.</li>
		<li>A backlog item's component, tester, developer and owner is now set if the values are missing - so the feature now also works if there are multiple backlogs.</li>
		<li>All user references in backlog items, components and backlogs now filter for the x_snc_agile.agilist role.</li>
		<li>Components now have a description field.</li>
		<li>Added menu module "New Item".</li>
		<li>Added menu module for items "In Draft" and refined the list for "In Development" and "In Test".</li>
	</ol>	

	<h3>1.0.0 - 2023-02-08</h3>
	<p>First baselined version</p>

<span style="visibility: hidden;">_CUT_HERE_</span>
</div>
</j:jelly>]]></html>
        <name>manual</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-06-04 14:47:11</sys_created_on>
        <sys_id>cde35407db774510b652edb3059619dc</sys_id>
        <sys_mod_count>131</sys_mod_count>
        <sys_name>manual</sys_name>
        <sys_package display_value="Agile WORK IN PROGRESS" source="x_snc_agile">65135483db774510b652edb3059619c8</sys_package>
        <sys_policy/>
        <sys_scope display_value="Agile WORK IN PROGRESS">65135483db774510b652edb3059619c8</sys_scope>
        <sys_update_name>sys_ui_page_cde35407db774510b652edb3059619dc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-01 18:12:58</sys_updated_on>
    </sys_ui_page>
</record_update>
